export default {
  'repository.personal': 'Personal Projects',
  'repository.nnecec-react.desc': 'Built on Parcel, a personal website written in the React framework that uses TypeScript. <br/><br/>Parcel is mainly used to try different build tools from Webpack. It is also feasible to estimate the zero configuration of small websites. However, zero configuration makes some problems that need to be configured feel inconvenient to use. The project body is developed by TypeScript + React, and MobX is used for state management. Styles use PostCSS as a pre-processing tool, but in development, more and more feel that you need style componentization, on the one hand, it is convenient to develop. On the one hand, local styles do not need to consider the impact on the whole, so gradually replace them with styled-components. The multi-language feature makes development cumbersome, but the results are really very good and practical.',

  'repository.ecblog-server.desc': 'Blog backend services built using Node.js, TypeScript, GraphQL, Koa, MongoDB. <br/>Use the Koa2 framework to work with the backend services built by GraphQL. Because of previous experience with related databases, and mongoose is very convenient to use in Node.js, MongoDB is chosen for data storage. User authentication uses Passport + jsonwebtoken and caches tokens on the front end to save the login. Other interfaces are basically the function of data addition, deletion and modification.',

  'repository.ecblog-admin.desc': 'An Angular project built by Angular-Cli. Angular + TypeScript + ngrx built a blog background management system. <br/>Angular\'s large and full framework is very suitable and easy to use as a back-end system, because it is completely lost. But its threshold is slightly higher than React/Vue. Because the backend uses GraphQL, Apollo-Angular is also included in the project to assist the client.',

  'repository.work': 'Work Projects',
  'repository.malianghang.desc': 'A set of official e-commerce websites and back-end systems developed using the Angular 1 framework, using RequiresJS to complete AMD mode development. The mobile uses ionic and the desktop uses Bootstrap / material. The back-end mainly uses the LeanCloud third-party cloud service platform; <br/>In the project, it is mainly responsible for front-end development work, writing pages and interaction effects, and participating in part of interface development. <br/>As the first job, we learned modular development, front-end automation development, and the ability to write or rewrite front-end components. Complete complex layouts to ensure product compatibility. Also due to the vacancies in the design and products of the startup, the development and consideration of the product at the same time. Strive to pursue more elegant code and higher performance efficiency in the project.',

  'repository.dianwoda.desc': 'This project is a background configuration system for the company\'s main operators. The front-end project is built using React + Redux + AntD, and the back-end uses the dubbo micro-service architecture, which provides an interface for the front-end through the Node.js gateway layer. <br/>Responsible for the rider and online store module, participate in the review of new requirements, development and maintenance of existing functions, migrate old versions of React projects, and maintain the official website. Develop front-end and Node.js gateway parts, and participate in the transformation of different places. <br/>Understanding the systematic development process of the system, more use and accumulation of React and AntD. Back-end micro-services and the involvement of the Node.js gateway layer make front-end development work easier to collaborate, improve front-end controllability of interface data, and gain some experience with the Node.js project.',
};
